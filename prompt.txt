# 命令書：画像内の月を自動検出してトリミングするPythonスクリプトの作成

あなたはプロのPython開発者です。以下の要件定義に基づき、画像内に写っている月を自動で検出し、指定された複数のサイズでトリミング（切り抜き）を行うコマンドラインツールを作成してください。

## 概要
このスクリプトは、入力された画像ファイルから円形（月）を検出し、その中心を基準に画像を切り抜きます。天体写真の編集作業を自動化することを目的とします。

## 要件定義

### 1. 基本機能
- コマンドライン引数として、画像ファイルのパスを1つ受け取ること。
- 引数が指定されなかった場合は、使用方法を表示して終了すること。
- 画像処理ライブラリOpenCVを利用して、画像内の月（円）を検出すること。
- 検出した月の中心座標と半径を取得すること。
- 元画像のExif情報を読み込み、切り抜いた後の画像にも保持させること。

### 2. 使用ライブラリ
- `opencv-python`
- `numpy`
- `piexif`
- `sys`
- `os`

### 3. 実装の詳細

#### 3.1. 月の検出処理 (`detect_moon_center` 関数)
- **入力**: 画像ファイルのパス
- **処理**:
    1. `cv2.imread()` で画像を読み込む。画像が読み込めない場合はエラーメッセージを表示し、Noneを返す。
    2. `piexif.load()` でExifデータを読み込む。Exifがない場合やエラーが発生した場合は警告を表示するが、処理は続行する。
    3. 画像をグレースケールに変換する (`cv2.cvtColor`)。
    4. `cv2.GaussianBlur()` を使ってノイズを軽減する。
    5. `cv2.HoughCircles()` (ハフ変換) を用いて円を検出する。パラメータは、様々なサイズの月に対応できるよう適切に設定すること。
    6. 円が検出された場合、最も確からしいものを1つ選択する（例：配列の最初の要素）。
    7. 円が検出されなかった場合は、その旨をメッセージで表示し、Noneを返す。
    8. 検出結果の確認のため、元の画像に検出した円（緑色）と中心点（赤色）を描画したデバッグ用画像を生成する。
- **戻り値**: `(中心座標, 半径, 元の画像オブジェクト, デバッグ用画像オブジェクト, Exifデータ)` のタプル。検出失敗時は `(None, None, None, None, None)`。

#### 3.2. トリミングと保存処理 (`crop_and_save_centered_image` 関数)
- **入力**: `(元の画像オブジェクト, 中心の座標, 出力ファイル名のプレフィックス, Exifデータ, 切り抜き幅, 切り抜き高さ, ファイル名に付与するサフィックス)`
- **処理**:
    1. 指定された中心座標と切り抜きサイズを基に、切り抜き範囲の開始座標（左上）を計算する。
    2. 計算した範囲が画像の境界をはみ出さないように、開始座標を調整する。
    3. 画像をスライスして切り抜く。
    4. `(プレフィックス) + (サフィックス) + (元の拡張子)` という形式で出力ファイル名を生成する。
    5. `cv2.imwrite()` で切り抜いた画像を保存する。
    6. Exifデータが存在する場合、`piexif.insert()` を使って新しい画像ファイルにExifデータを書き込む。
    7. 保存が完了した旨をメッセージで表示する。

#### 3.3. メイン処理 (`if __name__ == "__main__":`)
- `sys.argv` をチェックし、コマンドライン引数が渡されているか確認する。
- `detect_moon_center` 関数を呼び出して月の検出を行う。
- 検出に成功した場合:
    1. 検出した中心座標と半径を表示する。
    2. デバッグ用画像を `detected_moon_<元のファイル名>` という名前で保存する。
    3. `crop_and_save_centered_image` 関数を以下の設定で3回呼び出す。
        - **1回目**: 切り抜きサイズ 1000x1000, サフィックス "a"
        - **2回目**: 切り抜きサイズ 1920x1080, サフィックス "b"
        - **3回目**: 切り抜きサイズ 1080x1920, サフィックス "c"
- 検出に失敗した場合:
    - 処理が失敗した旨のメッセージを表示して終了する。

### 4. 出力
- スクリプトの実行ディレクトリに、以下のファイルが生成されること。
    - `detected_moon_<元のファイル名>`
    - `<元のファイル名ベース>a.<拡張子>`
    - `<元のファイル名ベース>b.<拡張子>`
    - `<元のファイル名ベース>c.<拡張子>`
- 処理の各段階で、状況がわかるようなログメッセージ（例：「月を検出しました」「画像を保存しました」）をコンソールに出力すること。